import '../appointment_screen/widgets/time_item_widget.dart';import 'controller/appointment_controller.dart';import 'models/time_item_model.dart';import 'package:flutter/material.dart';import 'package:table_calendar/table_calendar.dart';import 'package:yasir_s_application3/core/app_export.dart';import 'package:yasir_s_application3/widgets/app_bar/appbar_leading_image.dart';import 'package:yasir_s_application3/widgets/app_bar/appbar_title.dart';import 'package:yasir_s_application3/widgets/app_bar/custom_app_bar.dart';import 'package:yasir_s_application3/widgets/custom_elevated_button.dart';class AppointmentScreen extends GetWidget<AppointmentController> {const AppointmentScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(appBar: _buildAppBar(), body: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 13.v), child: Column(children: [_buildNameRow(), SizedBox(height: 16.v), _buildDatePicker(), SizedBox(height: 5.v)])), bottomNavigationBar: _buildNextButton())); } 
/// Section Widget
PreferredSizeWidget _buildAppBar() { return CustomAppBar(leadingWidth: 56.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgArrowLeftOnprimary, margin: EdgeInsets.only(left: 24.h, top: 12.v, bottom: 12.v), onTap: () {onTapArrowLeft();}), centerTitle: true, title: AppbarTitle(text: "lbl_appointment".tr)); } 
/// Section Widget
Widget _buildNameRow() { return Container(padding: EdgeInsets.symmetric(horizontal: 18.h, vertical: 13.v), decoration: AppDecoration.fillOnPrimary.copyWith(borderRadius: BorderRadiusStyle.roundedBorder16), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgImage64x64, height: 64.adaptSize, width: 64.adaptSize, radius: BorderRadius.circular(32.h), margin: EdgeInsets.symmetric(vertical: 2.v)), Padding(padding: EdgeInsets.only(left: 14.h, top: 2.v), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [SizedBox(width: 136.h, child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Text("lbl_emily_kevin".tr, style: theme.textTheme.titleMedium), Container(width: 33.h, margin: EdgeInsets.only(bottom: 6.v), padding: EdgeInsets.symmetric(horizontal: 8.h, vertical: 1.v), decoration: AppDecoration.fillPrimary.copyWith(borderRadius: BorderRadiusStyle.roundedBorder4), child: Text("lbl_4_9".tr, style: CustomTextStyles.labelMediumOnError))])), Text("msg_high_intensity_training".tr, style: CustomTextStyles.bodySmallPrimary), SizedBox(height: 11.v), Text("msg_2_years_experience".tr, style: CustomTextStyles.bodySmallPrimary)]))])); } 
/// Section Widget
Widget _buildDatePicker() { return Container(width: 327.h, padding: EdgeInsets.symmetric(vertical: 16.v), decoration: AppDecoration.fillOnPrimary.copyWith(borderRadius: BorderRadiusStyle.roundedBorder16), child: Column(mainAxisSize: MainAxisSize.min, children: [SizedBox(height: 262.v, width: 295.h, child: Stack(alignment: Alignment.center, children: [Align(alignment: Alignment.topRight, child: Container(width: 32.adaptSize, margin: EdgeInsets.only(top: 77.v, right: 41.h), padding: EdgeInsets.symmetric(horizontal: 11.h, vertical: 6.v), decoration: AppDecoration.outlinePrimaryContainer.copyWith(borderRadius: BorderRadiusStyle.roundedBorder16), child: Text("lbl_2".tr, style: theme.textTheme.labelLarge))), Align(alignment: Alignment.center, child: Obx(() => SizedBox(height: 262.v, width: 295.h, child: TableCalendar(locale: 'en_US', firstDay: DateTime(DateTime.now().year - 5), lastDay: DateTime(DateTime.now().year + 5), calendarFormat: CalendarFormat.month, rangeSelectionMode: controller.rangeSelectionMode.value, startingDayOfWeek: StartingDayOfWeek.monday, headerStyle: HeaderStyle(formatButtonVisible: false, titleCentered: true), calendarStyle: CalendarStyle(outsideDaysVisible: false, isTodayHighlighted: true, todayTextStyle: TextStyle(color: theme.colorScheme.onError.withOpacity(1), fontFamily: 'Open Sans', fontWeight: FontWeight.w600), todayDecoration: BoxDecoration(color: theme.colorScheme.primary, borderRadius: BorderRadius.circular(16.h))), daysOfWeekStyle: DaysOfWeekStyle(weekdayStyle: TextStyle(color: appTheme.whiteA700, fontFamily: 'Open Sans', fontWeight: FontWeight.w400)), headerVisible: false, rowHeight: 32.adaptSize, focusedDay: controller.focusedDay.value, rangeStartDay: controller.rangeStart, rangeEndDay: controller.rangeEnd, onDaySelected: (selectedDay, focusedDay) {if (!isSameDay(controller.selectedDay, selectedDay)) {controller.focusedDay.value = focusedDay; controller.selectedDay = selectedDay; controller.rangeSelectionMode.value = RangeSelectionMode.toggledOn;}}, onRangeSelected: (start, end, focusedDay) {controller.focusedDay.value = focusedDay; controller.rangeEnd = end; controller.rangeStart = start; controller.rangeSelectionMode.value = RangeSelectionMode.toggledOn;}, onPageChanged: (focusedDay) {controller.focusedDay.value = focusedDay;}))))])), SizedBox(height: 22.v), Align(alignment: Alignment.centerLeft, child: Padding(padding: EdgeInsets.only(left: 16.h), child: Text("lbl_time".tr, style: theme.textTheme.titleMedium))), SizedBox(height: 13.v), Obx(() => Wrap(runSpacing: 21.v, spacing: 21.h, children: List<Widget>.generate(controller.appointmentModelObj.value.timeItemList.value.length, (index) {TimeItemModel model = controller.appointmentModelObj.value.timeItemList.value[index]; return TimeItemWidget(model);}))), SizedBox(height: 8.v)])); } 
/// Section Widget
Widget _buildNextButton() { return CustomElevatedButton(text: "lbl_next".tr, margin: EdgeInsets.only(left: 56.h, right: 56.h, bottom: 32.v)); } 

/// Navigates to the previous screen.
onTapArrowLeft() { Get.back(); } 
 }
